

input_values
===============================

/==============================


output_values
===============================
  
/==============================


output_events
===============================
/==============================


vars
===============================
  void* trace_object;
  int num;
/==============================

 
expansions
===============================
  num             =====>   sm->vars.$$
  trace()         =====>   trace_str($handlerDescriptionStringNoAction$);
  trace_str(str)  =====>   ${smStructName}_test_trace(sm->vars.trace_object, {{str}})
  fail()          =====>   ${smStructName}_fail($handlerDescriptionStringNoAction$);
/==============================


execute_after_dispatch
=======================

/======================



h_file_top
================
//~anything you want at top of .h file like additional includes
void ${smStructName}_test_trace(void* trace_object, const char* const description);
void ${smStructName}_fail(const char* const description);
/================

c_file_top
==================
//~anything you want at top of .c file like additional includes
/==================


c_functions
==================
//~this section is expanded based on expansions
/=================


c_prototypes
==================

/=================

